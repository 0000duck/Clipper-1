<html>

<head>
    <meta charset="utf-8">
  <script type="text/javascript" src="../../../../Scripts/jquery.js">
  </script>
    
  <script type="text/javascript" src="../../../../Scripts/SyntaxHighlighter/scripts/shCore.js">
  </script>
    
  <script type="text/javascript" src="../../../../Scripts/SyntaxHighlighter/scripts/shBrushDelphi.js">
  </script>
    
  <script type="text/javascript" src="../../../../Scripts/SyntaxHighlighter/scripts/shBrushCpp.js">
  </script>
    
  <script type="text/javascript" src="../../../../Scripts/SyntaxHighlighter/scripts/shBrushCSharp.js">
  </script>
    
  <link type="text/css" rel="stylesheet" href="../../../../Scripts/SyntaxHighlighter/styles/shCoreDefault.css">
    
  <link type="text/css" rel="stylesheet" href="../../../../Scripts/SyntaxHighlighter/styles/shThemeDefault.css">
  

  <title>CleanPolygon</title>

  <link rel="stylesheet" href="../../../../Styles/default.css" type="text/css">

    
  <script type="text/javascript" src="../../../../Scripts/bootstrap.js">
  </script>
  
</head>

<body bgcolor="#FFFFFF">
    
  <!-- THIS FILE HAS BEEN AUTOMATICALLY PROCESSED FROM A SOURCE COPY -->
    
  <!-- DO NOT EDIT MANUALLY !!! -->
  
  <table class="Banner" cellspacing="0" cellpadding="0" border="1" bordercolorlight="#303080" bordercolordark="#7070B0">
    <tr>
      <td class="Banner" nowrap=""><a href="../../../_Body.htm" class="Banner"><img src="../../../../Images/_Home.gif" align="absmiddle">Home</a>
      </td>
      <td class="Banner" nowrap=""><a href="../_Body.htm" class="Banner"><img src="../../../../Images/_Unit.gif" align="absmiddle">ClipperLib</a>
      </td>
      <td class="Banner" width="100%" align="right"><img src="../../../../Images/_Project_Logo.gif" align="absmiddle">
      </td>
    </tr>
  </table>
  <h1>CleanPolygon（清除多边形）</h1>


  <p class="Decl"><span class="Comment">Del.&raquo;</span> <b>function</b> CleanPolygon(<b>const</b> Poly: TPath; Distance: double = 1.415): TPath;</p>

<p class="Decl2"><span class="Comment"> C++&nbsp;&raquo;</span> <b>void</b> CleanPolygon(<b>const</b> Path &amp;in_poly, Path &amp;out_poly, double distance = 1.415);</p>

  <p class="Decl2"><span class="Comment"> C++&nbsp;&raquo;</span> <b>void</b> CleanPolygon(Path &amp;poly, double distance = 1.415);</p>

  <p class="Decl3"><span class="Comment">C#&nbsp;&nbsp;&raquo;</span> <b>public static</b> Path CleanPolygon(Path poly, double distance = 1.415);</p>
<br>


  <p class="Body"> Removes vertices: 
    <ul>
	
      <li>that join co-linear edges, or join edges that are almost co-linear (such that if the vertex was moved no more than the specified distance the edges would be co-linear)</li>
	
      <li>that are within the specified distance of an adjacent vertex</li>
	
      <li>that are within the specified distance of a semi-adjacent vertex together with their out-lying vertices</li>

    </ul> </p>
    <blockquote>
      <blockquote>
        <p>删除顶点：</p>
        <ul>
          <li>该加入co-linear（共线）的边缘，或者加入边缘是几乎共线的（例如，如果顶点被移动超过规定的距离的边缘将被共线性没有更多的）</li>
          <li>是相邻顶点的指定距离内</li>
          <li>这是一起的半相邻顶点的指定距离与他们进行卧内的顶点</li>
        </ul>
      </blockquote>
      <p>/*</p>
      <p>时间：2017年3月8日09:33:11</p>
      <p>内容：删除几乎成直线的点，</p>
      <p>	  说是清除，我更愿意叫这个函数为优化！优化多边形，去除其中的多余点！累赘点！</p>
      <p>作者：TwoSilly</p>
      <p>*/</p>
    </blockquote>
<p class="Body"> Vertices are <em>semi-adjacent</em> when they are separated by a single (out-lying) vertex.<br>
</p>
<p class="Body">顶点<em>semi-adjacent（部分相邻</em>，）当他们由一个（out-lying（撒谎））顶点分离。</p>
<p class="Body"><br> 
  The <em>distance</em> parameter's default value is approximately &radic;2 so that a vertex will be removed when adjacent or semi-adjacent vertices having their corresponding X and Y coordinates differing by no more than 1 unit. (If the egdes are semi-adjacent the out-lying vertex will be removed too.)<br>
</p>
<p class="Body">的<em>距离</em>参数的默认值是约√2使得顶点将被移除时具有其相应的X和Y坐标由不超过1个单位的不同相邻或半相邻顶点。（如果egdes是半相邻的出躺在顶点也将被删除。）</p>
<p class="Body"><br> 
  C++ only: This function is overloaded. In the first definition, the <em>in_poly</em> and <em>out_poly</em> parameters can reference the same <em>Path</em> object though in that case the calling code might be clearer if the second definition (accepting a single <em>Paths</em> parameter) is used.</p>
<p class="Body">&nbsp;</p>
<p class="Body">仅限于C ++：该函数重载。在第一个定义，<em>in_poly</em>和<em>out_poly</em>参数可以参考同一个<em>路径</em>的对象，虽然在这种情况下，如果第二个定义（接受一个调用代码可能是更清晰<em>的路径</em>，使用参数）。<br>
  <br> <img src="../../../../Images/clean1.png" alt="" border="0">&nbsp;&nbsp;&nbsp; <img src="../../../../Images/clean2.png" alt="" border="0"> </p>





<h2 id="Auto-SeeAlso">请查阅</h2>
  <p class="Body"><a href="CleanPolygons.htm">CleanPolygons（清除多边形）</a>，<a href="SimplifyPolygon.htm">SimplifyPolygon（简化多边形）</a>, <a href="../Types/Path.htm">Path（路径）</a></p>
    
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2014 Angus Johnson&nbsp; - &nbsp; Clipper 6.2.1 &nbsp; - &nbsp; Help file built on 1-November-2014 <br><br> </p>
  
</body>

</html>